--- a/src/core/lib/security/credentials/jwt/jwt_verifier.cc	2018-06-05 18:57:19.799620042 +0800
+++ b/src/core/lib/security/credentials/jwt/jwt_verifier.cc	2018-06-05 18:59:01.698618424 +0800
@@ -466,7 +466,7 @@
   return result;
 }
 
-#if OPENSSL_VERSION_NUMBER < 0x10100000L
+#if OPENSSL_VERSION_NUMBER < 0x10100000L || defined(LIBRESSL_VERSION_NUMBER)
 
 // Provide compatibility across OpenSSL 1.02 and 1.1.
 static int RSA_set0_key(RSA* r, BIGNUM* n, BIGNUM* e, BIGNUM* d) {
@@ -493,7 +493,7 @@
 
   return 1;
 }
-#endif  // OPENSSL_VERSION_NUMBER < 0x10100000L
+#endif  // OPENSSL_VERSION_NUMBER < 0x10100000L || defined(LIBRESSL_VERSION_NUMBER)
 
 static EVP_PKEY* pkey_from_jwk(const grpc_json* json, const char* kty) {
   const grpc_json* key_prop;
--- a/src/core/tsi/alts/crypt/aes_gcm.cc	2018-06-05 19:28:32.374964917 +0800
+++ b/src/core/tsi/alts/crypt/aes_gcm.cc	2018-06-05 19:29:07.118032548 +0800
@@ -185,7 +185,7 @@
                                                 const uint8_t* kdf_counter) {
   unsigned char buf[EVP_MAX_MD_SIZE];
   unsigned char ctr = 1;
-#if OPENSSL_VERSION_NUMBER < 0x10100000L
+#if OPENSSL_VERSION_NUMBER < 0x10100000L || defined(LIBRESSL_VERSION_NUMBER)
   HMAC_CTX hmac;
   HMAC_CTX_init(&hmac);
   if (!HMAC_Init_ex(&hmac, kdf_key, kKdfKeyLen, EVP_sha256(), nullptr) ||
--- a/src/core/tsi/ssl_transport_security.cc	2018-06-05 19:52:50.683704915 +0800
     tsi_ssl_client_handshaker_factory** factory) {
@@ -1547,7 +1560,7 @@
                                   options->cipher_suites);
     if (result != TSI_OK) break;
 
-#if OPENSSL_VERSION_NUMBER >= 0x10100000
+#if OPENSSL_VERSION_NUMBER >= 0x10100000 && !(defined(LIBRESSL_VERSION_NUMBER) && LIBRESSL_VERSION_NUMBER < 0x2070000fL)
     // X509_STORE_up_ref is only available since OpenSSL 1.1.
     if (options->root_store != nullptr) {
       X509_STORE_up_ref(options->root_store->store);
